@using TellarknightApp.Services
@using TellarknightApp.Models
@inject SupportedCards supportedCards

<div class="app-grid-container">
    <div class="item grid-search">
        <div class="grid-search-container">
            <div class="grid-search-1">
                <input id="searchQuery" type="text" class="search-input" @bind-value="searchQuery" />
            </div>
            <div class="size grid-search-2">
                <button class="btn btn-primary" @onclick="@(() => CardSearch())">Search</button>
            </div>
            <div class="grid-search-3">
                <select @bind="typeQuery" style="height: 100%; width: 100%;">
                    <option value="@string.Empty" selected>Card Type</option>
                    <option value="Monster">Monster</option>
                    <option value="Spell">Spell</option>
                    <option value="Trap">Trap</option>
                </select>
            </div>
            <div class="grid-search-4">
                <select @bind="archetypeQuery" style="height: 100%; width: 100%;">
                    <option value="@string.Empty" selected>Archetype</option>
                    <option value="None">None</option>
                    <option value="Tellarknight">Tellarknight</option>
                    <option value="Constellar">Constellar</option>
                    <option value="Zefra">Zefra</option>
                    <option value="SHS">SHS</option>

                </select>
            </div>
            <div class="grid-search-5">
                <button class="btn btn-danger" @onclick="() => CardSearch()">View Decklist</button>
            </div>
        </div>
    </div>
    <div class="grid-cards">

        <div class="card-container">
            @foreach (Card card in supportedCards.Cards.Where(x => x.Name.ToLower().Contains(searchQuery.ToLower())))
            {
                <div class="grid-item">
                    <img src="@card.Image" alt="@card.Name" class="item-image" />
                    <div class="quantity-control">
                        <button class="btn-quantity"                    HorizontalOptions="Center"   @onclick="() => DecreaseQuantity(card)">-</button>
                        <input type="text" class="item-input" @bind="card.Quantity" />
                        <button class="btn-quantity" HorizontalOptions="Center"  @onclick="() => IncreaseQuantity(card)">+</button>
                    </div>
                </div>
            }
        </div>

    </div>
</div>

@code {
    [Parameter]
    public EventCallback UpdateState { get; set; }
    private string searchQuery = string.Empty;
    private string typeQuery;
    private string archetypeQuery;
    private List<string> optionsType = new List<string>
    {
        "Monster",
        "Spell",
        "Trap",
    };

    public async void CardSearch()
    {
        await OnInitializedAsync();
    }

    public void IncreaseQuantity(Card card)
    {
        card.Quantity++;
    }

    public void DecreaseQuantity(Card card)
    {
        card.Quantity--;
    }

    protected override async Task OnInitializedAsync()
    {
        supportedCards.Action += StateHasChanged;
    }
}
